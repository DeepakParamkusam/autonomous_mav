#include <opencv2/core/core.hpp>
#include <opencv2/highgui/highgui.hpp>
#include <iostream>

using namespace cv;
using namespace std;

int main(){
Mat img;
Mat bgr[3];   //destination array
Mat I_b,I_g,I_r;
img = imread("argv[1]", CV_LOAD_IMAGE_COLOR);   // Read the image in RGB form
split(img, bgr);

int W = img.cols;
int H = img.rows;
//Note: OpenCV uses BGR color order
I_b = bgr[0];
I_g = bgr[1];
I_r = bgr[2];

int isgrass[H][W];
int i,j;

for (i = 0; i < H; i++){
  for(j = 0; j< W; j++){
    if(I_g[i][j] > (I_r[i][j] + 10) && I_g[j][j] > (I_b[i][j] + 10) && I_g[i][j] > 72){
      isgrass[i][j] = 1;
    }

    else{
      isgrass[i][j] = 0;
    }

  }
}
int m,n, CoW, H_bott, Sign;
int S = 0;
int WSum = 0;

for(i = H; i > H/2; i-= 4){
  for(m = W/4; m < W*3/4; m++){
    S += 1 - isgrass[i][m];
    WSum += m*(1 - isgrass[i][m]);
  }
  CoW = WSum/S;
  if( (S > W/40) && (CoW - W/2) < W/5){
    H_bott = i;
    Sign = 0;
    if(i > 9*H/10){
      WSum = 0;
      S = 0;
      for(m = W/4; m < W*3/4; m++){
        for(n = i - W/5 + 1; n < i; n++){
          WSum += m*(1 - isgrass[n][m]);
          S += 1 - isgrass[n][m];
        }
        WSum = WSum/S;
        Sign = -1;

        if(WSum < W/2){
          Sign = 1;
        }
      }
    }
    break;
  }

}
}s
